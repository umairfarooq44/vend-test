// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`should work fine 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <CustomModal
    footerOkLoading={false}
    heading="Are you sure?"
    isOpen={false}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "autoFocus": true,
      "backdrop": "static",
      "backdropTransition": Object {
        "mountOnEnter": true,
        "timeout": 150,
      },
      "centered": false,
      "children": Array [
        <ModalHeader
          charCode={215}
          closeAriaLabel="Close"
          tag="h5"
          wrapTag="div"
        >
          <Icon
            type="check-circle"
          />
          <h5>
            Are you sure?
          </h5>
        </ModalHeader>,
        <ModalBody
          tag="div"
        >
          <div
            className="row"
          >
            <div
              className="col ml-auto undefined"
            />
          </div>
        </ModalBody>,
        <ModalFooter
          tag="div"
        >
          <button
            className="btn btn-white border px-3 undefined"
          />
          <button
            className="btn btn-primary px-3"
            disabled={false}
            style={
              Object {
                "width": "25%",
              }
            }
          />
           
        </ModalFooter>,
      ],
      "className": "dr-modal",
      "fade": true,
      "isOpen": false,
      "keyboard": true,
      "modalTransition": Object {
        "timeout": 300,
      },
      "onClosed": [Function],
      "onOpened": [Function],
      "role": "dialog",
      "toggle": undefined,
      "zIndex": 1050,
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "charCode": 215,
          "children": Array [
            <Icon
              type="check-circle"
            />,
            <h5>
              Are you sure?
            </h5>,
          ],
          "closeAriaLabel": "Close",
          "tag": "h5",
          "wrapTag": "div",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "type": "check-circle",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Are you sure?",
            },
            "ref": null,
            "rendered": "Are you sure?",
            "type": "h5",
          },
        ],
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": <div
            className="row"
          >
            <div
              className="col ml-auto undefined"
            />
          </div>,
          "tag": "div",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <div
              className="col ml-auto undefined"
            />,
            "className": "row",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": undefined,
              "className": "col ml-auto undefined",
            },
            "ref": null,
            "rendered": null,
            "type": "div",
          },
          "type": "div",
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": Array [
            <button
              className="btn btn-white border px-3 undefined"
            />,
            <button
              className="btn btn-primary px-3"
              disabled={false}
              style={
                Object {
                  "width": "25%",
                }
              }
            />,
            " ",
          ],
          "tag": "div",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": undefined,
              "className": "btn btn-white border px-3 undefined",
              "onClick": undefined,
            },
            "ref": null,
            "rendered": null,
            "type": "button",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                false,
                undefined,
              ],
              "className": "btn btn-primary px-3",
              "disabled": false,
              "onClick": undefined,
              "style": Object {
                "width": "25%",
              },
            },
            "ref": null,
            "rendered": Array [
              false,
              undefined,
            ],
            "type": "button",
          },
          " ",
        ],
        "type": [Function],
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "autoFocus": true,
        "backdrop": "static",
        "backdropTransition": Object {
          "mountOnEnter": true,
          "timeout": 150,
        },
        "centered": false,
        "children": Array [
          <ModalHeader
            charCode={215}
            closeAriaLabel="Close"
            tag="h5"
            wrapTag="div"
          >
            <Icon
              type="check-circle"
            />
            <h5>
              Are you sure?
            </h5>
          </ModalHeader>,
          <ModalBody
            tag="div"
          >
            <div
              className="row"
            >
              <div
                className="col ml-auto undefined"
              />
            </div>
          </ModalBody>,
          <ModalFooter
            tag="div"
          >
            <button
              className="btn btn-white border px-3 undefined"
            />
            <button
              className="btn btn-primary px-3"
              disabled={false}
              style={
                Object {
                  "width": "25%",
                }
              }
            />
             
          </ModalFooter>,
        ],
        "className": "dr-modal",
        "fade": true,
        "isOpen": false,
        "keyboard": true,
        "modalTransition": Object {
          "timeout": 300,
        },
        "onClosed": [Function],
        "onOpened": [Function],
        "role": "dialog",
        "toggle": undefined,
        "zIndex": 1050,
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "charCode": 215,
            "children": Array [
              <Icon
                type="check-circle"
              />,
              <h5>
                Are you sure?
              </h5>,
            ],
            "closeAriaLabel": "Close",
            "tag": "h5",
            "wrapTag": "div",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "type": "check-circle",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Are you sure?",
              },
              "ref": null,
              "rendered": "Are you sure?",
              "type": "h5",
            },
          ],
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": <div
              className="row"
            >
              <div
                className="col ml-auto undefined"
              />
            </div>,
            "tag": "div",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <div
                className="col ml-auto undefined"
              />,
              "className": "row",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": undefined,
                "className": "col ml-auto undefined",
              },
              "ref": null,
              "rendered": null,
              "type": "div",
            },
            "type": "div",
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": Array [
              <button
                className="btn btn-white border px-3 undefined"
              />,
              <button
                className="btn btn-primary px-3"
                disabled={false}
                style={
                  Object {
                    "width": "25%",
                  }
                }
              />,
              " ",
            ],
            "tag": "div",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": undefined,
                "className": "btn btn-white border px-3 undefined",
                "onClick": undefined,
              },
              "ref": null,
              "rendered": null,
              "type": "button",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  false,
                  undefined,
                ],
                "className": "btn btn-primary px-3",
                "disabled": false,
                "onClick": undefined,
                "style": Object {
                  "width": "25%",
                },
              },
              "ref": null,
              "rendered": Array [
                false,
                undefined,
              ],
              "type": "button",
            },
            " ",
          ],
          "type": [Function],
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
